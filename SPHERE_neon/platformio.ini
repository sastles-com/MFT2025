; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = atoms3r_bno055

[env:atoms3r_bno055]
platform = espressif32@^6.8.1
platform_packages = 
	platformio/framework-arduinoespressif32@^3.20017.0
	platformio/tool-esptoolpy@1.40501.0
framework = arduino
board = m5stack-atoms3
board_build.arduino.memory_type = qio_opi
board_build.partitions = partitions.csv
board_build.filesystem = littlefs
monitor_speed = 115200
; PlatformIO Project Configuration File
monitor_rts = 0
monitor_dtr = 0
upload_speed = 1500000
build_type = debug
build_flags = 
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D ESP32S3
	-D ARUDINO_M5STACK_ATOMS3R
	-D BOARD_HAS_PSRAM
	-D USE_M5UNIFIED
	-D USE_FASTLED
	-D CORE_DEBUG_LEVEL=4
	-D DEBUG
	-D IMU_SENSOR_BNO055
	-fpermissive
	-D ELEGANTOTA_USE_ASYNC_WEBSERVER=1
	-std=c++17
build_src_filter =
	+<*>
	-<test_strip/*>
	-<test_shake/*>
lib_deps = 
	SPI
	Wire
	m5stack/M5Unified
	m5stack/M5GFX
	tobozo/ESP32-PSRamFS@^1.0.6
	; STEMpedia/DabbleESP32@^1.5.1
	throwtheswitch/Unity@^2.6.0
	fastled/FastLED@^3.7.0
lib_ldf_mode = deep
test_build_src = no


[env:unit_native]
platform = native
build_type = debug
test_build_src = yes
board = native
lib_deps = throwtheswitch/Unity, bblanchon/ArduinoJson@^6.21.3
; Include our unit tests and minimal bridge implementations
build_src_filter = +<test/test_shake_to_ui/*> +<test/test_procedural_opening_player/*> +<test/test_procedural_opening_leds/*> +<test/test_config_led/*> +<test/test_config_full/*> +<test/test_ledsphere_manager/*> +<include/imu/ShakeToUiBridge.h> +<src/imu/ShakeToUiBridge.cpp> +<src/boot/ProceduralOpeningPlayer.cpp>

[env:atoms3r_bmi270]
platform = espressif32@^6.8.1
platform_packages = 
	platformio/framework-arduinoespressif32@^3.20017.0
	platformio/tool-esptoolpy@1.40501.0
framework = arduino
board = m5stack-atoms3
board_build.arduino.memory_type = qio_opi
board_build.partitions = partitions.csv
board_build.filesystem = spiffs
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
monitor_rts = 0
monitor_dtr = 0
; Use a lower upload speed for stability on some hosts/boards
upload_speed = 460800
upload_resetmethod = hard
build_type = debug
build_flags = 
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D ESP32S3
	-D ARUDINO_M5STACK_ATOMS3R
	-D BOARD_HAS_PSRAM
	-D USE_M5UNIFIED
	-D USE_FASTLED
	-D CORE_DEBUG_LEVEL=4
	-D DEBUG
	-D IMU_SENSOR_BMI270
	-fpermissive
	-D ELEGANTOTA_USE_ASYNC_WEBSERVER=1
	-std=c++17
; Only include production sources; explicitly exclude test/demo runners that define setup()/loop()
build_src_filter =
	+<*>
	+<test/ProceduralPatternPerformanceTest.cpp>
	-<test_shake/*>
	-<cube_neon_led_demo.cpp>
	-<simple_led_demo.cpp>
	-<strip_test_demo.cpp>
	-<cube_neon_demo_standalone.cpp>
	-<test_strip/*>
lib_deps = 
	SPI
	Wire
	m5stack/M5Unified
	m5stack/M5GFX
	fastled/FastLED@^3.7.0
	adafruit/Adafruit BusIO@^1.16.1
	adafruit/Adafruit Unified Sensor@^1.1.14
	adafruit/Adafruit GFX Library@^1.11.10
	hpsaturn/EspNowCam@^0.1.14
	tobozo/ESP32-PSRamFS@^1.0.6
	bodmer/TJpg_Decoder
	marvinroger/AsyncMqttClient
	esp32async/ESPAsyncWebServer@^3.7.3
	esp32async/AsyncTCP@^3.4.8
	ayushsharma82/ElegantOTA@^3.1.2
	bblanchon/ArduinoJson@^6.21.3
	arduino-libraries/Madgwick@^1.2.0
	; STEMpedia/DabbleESP32@^1.5.1  # 一時的にコメントアウト（ESP32フレームワークとの互換性問題）
	throwtheswitch/Unity@^2.6.0
	file://../lib/common  # 共通ライブラリ参照
lib_ldf_mode = deep
test_build_src = no
 
